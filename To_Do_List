use std::io;
use std::collections::HashMap;

fn main() {
    let mut tasks: HashMap<String, bool> = HashMap::new();

    loop {
        println!("Lista de Tareas en Rust");
        println!("1. Agregar tarea");
        println!("2. Listar tareas");
        println!("3. Marcar tarea como completada");
        println!("4. Salir");

        let mut choice = String::new();
        io::stdin().read_line(&mut choice).expect("Fallo al leer la entrada.");
        let choice: u32 = match choice.trim().parse() {
            Ok(num) => num,
            Err(_) => {
                println!("Entrada no válida. Por favor, introduzca un número válido.");
                continue;
            }
        };

        match choice {
            1 => {
                println!("Ingrese la descripción de la tarea:");
                let mut description = String::new();
                io::stdin().read_line(&mut description).expect("Fallo al leer la entrada.");
                let description = description.trim().to_string();
                tasks.insert(description, false);
                println!("Tarea agregada: {}", description);
            }
            2 => {
                println!("Tareas pendientes:");
                for (task, completed) in &tasks {
                    if !completed {
                        println!("- {}", task);
                    }
                }
                println!("Tareas completadas:");
                for (task, completed) in &tasks {
                    if *completed {
                        println!("- {}", task);
                    }
                }
            }
            3 => {
                println!("Ingrese la descripción de la tarea que desea marcar como completada:");
                let mut description = String::new();
                io::stdin().read_line(&mut description).expect("Fallo al leer la entrada.");
                let description = description.trim().to_string();
                match tasks.get_mut(&description) {
                    Some(completed) => {
                        *completed = true;
                        println!("Tarea marcada como completada: {}", description);
                    }
                    None => {
                        println!("La tarea no existe en la lista.");
                    }
                }
            }
            4 => {
                println!("Saliendo de la lista de tareas.");
                break;
            }
            _ => {
                println!("Opción no válida. Por favor, seleccione una opción válida.");
            }
        }
    }
}
